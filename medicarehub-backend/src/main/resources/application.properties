# Server Configuration
server.port=8080

spring.application.name=medicarehub-backend

# Database Configuration (MySQL Example)
spring.datasource.url=jdbc:mysql://localhost:3306/medicarehub_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Ashok@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
# Options: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update
# Show SQL queries in console (good for development)
spring.jpa.show-sql=true
# For MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# For PostgreSQL:
# spring.datasource.url=jdbc:postgresql://localhost:5432/medicarehub_db
# spring.datasource.username=your_postgres_user
# spring.datasource.password=your_postgres_password
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging (Optional - default is good to start)
# logging.level.org.springframework=DEBUG
# logging.level.com.medicarehub=DEBUG

# Spring Security / JWT Configuration
# It's highly recommended to use a strong, randomly generated secret for production.
# Consider using environment variables for sensitive data like secrets.
jwt.secret=bWVkaWNhcmVodWItc2VjcmV0LWtleS1tdXN0LWJlLXZlcnktbG9uZy1hbmQtc2VjdXJlLXRvLW1lZXQtNTEyLWJpdC1yZXF1aXJlbWVudHM=


# JWT token expiration time in milliseconds
# 86400000 ms = 24 hours
jwt.expirationMs=86400000


# SpringDoc OpenAPI (Swagger) - if you added the dependency
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html